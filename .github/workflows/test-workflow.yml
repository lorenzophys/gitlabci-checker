name: Test workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.2.2-0
    - uses: snok/install-poetry@v1
      with:
        version: 1.2.2
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies
      run: poetry install --no-interaction
    - name: Lint
      run: |
        poetry run flake8 gitlabci_checker tests
        poetry run mypy gitlabci_checker
        poetry run pydocstyle gitlabci_checker --add-ignore=D100,D104
    - name: Test
      run: poetry run pytest -vv
      
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run tests and collect coverage
        run: poetry run pytest --cov-report=xml --no-cov-on-fail --cov=./gitlabci_checker
      - name: Upload coverage reports to Codecov with GitHub Action
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v3
